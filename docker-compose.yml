version: '3'

services:
  loraserver:
    image: loraserver/loraserver:latest
    depends_on:
      - odoo_ns
      - odoo_as
    volumes:
      - ./configuration/loraserver:/etc/loraserver

  appserver:
    image: loraserver/lora-app-server:latest
    depends_on:
      - loraserver
    ports:
      - 8080:8080
    volumes:
      - ./configuration/lora-app-server:/etc/lora-app-server

  gatewaybridge:
    image: loraserver/lora-gateway-bridge:latest
    ports:
      - 1700:1700/udp
    volumes:
      - ./configuration/lora-gateway-bridge:/etc/lora-gateway-bridge
  
  postgresql:
    image: postgres:9.6-alpine
    ports:
      - 5432
    volumes:
      - ./configuration/postgresql/initdb:/docker-entrypoint-initdb.d
      - ./data/postgresql:/var/lib/postgresql/data

  redis:
    ports:
      - 6379
    image: redis:4-alpine
    volumes:
      - ./data/redis:/data

  mosquitto:
    image: eclipse-mosquitto
    ports:
      - 1883:1883

  odoo_as:
    build:
      context: .
      dockerfile: odoo/Dockerfile
    depends_on:
      - postgresql
    ports:
      - 8069:8069
    environment:
      - HOST=postgresql
      - USER=loraserver_as
      - PASSWORD=loraserver_as
    volumes:
      - "./addons/appserver/:/mnt/extra-addons/appserver/"
    command: ["odoo", "--workers=0", "--db-filter=loraserver_as", "--database=loraserver_as", "--log-level=debug"]

  odoo_ns:
    build:
      context: .
      dockerfile: odoo/Dockerfile
    depends_on:
      - postgresql
    ports:
      - 8070:8069
    environment:
      - HOST=postgresql
      - USER=loraserver_ns
      - PASSWORD=loraserver_ns
    volumes:
      - "./addons/netserver/:/mnt/extra-addons/netserver/"
    command: ["odoo", "--workers=0", "--db-filter=loraserver_ns", "--database=loraserver_ns", "--log-level=debug"]